name: SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          java-version: 19
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # ðŸ‘‡ Install Firefox and Geckodriver (Linux)
      - name: Install Firefox and Geckodriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
          GECKO_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep "tag_name" | cut -d '"' -f 4)
          wget -q "https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/geckodriver-${GECKO_VERSION}-linux64.tar.gz"
          tar -xzf geckodriver-*-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
          geckodriver --version

      # ðŸ‘‡ Build, test, and run SonarQube scan
      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B -f backend/demo/pom.xml clean verify sonar:sonar \
            -Dsonar.projectKey=tanuri2002 \
            -Dsonar.organization=tanuri2002 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${SONAR_TOKEN}
